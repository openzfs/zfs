#!/bin/sh

ZPOOL_FORCE=""
for p in $(getargs rd.zpool.force=) ; do
	if [ "$p" = "1" ] ; then
		ZPOOL_FORCE="-f"
	else
		ZPOOL_FORCE=""
	fi
done

mount_zfs_root() {
	local _bootfs= _pool= mountpoint=

	udevsettle

	if [ $SEEK_BOOTFS -eq 1 ] ; then
		_bootfs=`zpool list -H -o bootfs | sed -n '/-/ !p' | sed 'q'`
		if [ "$?" != "0" ] || [ "$_bootfs" = "no pools available" ] || [ -z "$_bootfs" ] ; then
			info "ZFS: Failed to get bootfs, trying more thoroughly"
			zpool import -N -a "${ZPOOL_FORCE}"
			_bootfs=`zpool list -H -o bootfs | sed -n '/-/ !p' | sed 'q'`
			if [ "$?" != "0" ] || [ -z "$_bootfs" ] || [ $_bootfs = "no pools available" ] ; then
				rootok=0
				die "ZFS: Failed to find bootfs, consider specifying it manually"
				zpool list -H -o name | while read exppool ; do
					zpool export "$exppool"
				done
			fi
		fi
	else
		_pool="${root%%/*}"
		_bootfs="${root}"
		info "ZFS: pool = $_pool"
		info "ZFS: bootfs = $_bootfs"
		if ! zpool import -N "$ZPOOL_FORCE" "$_pool" ; then
			warn "ZFS: unable to import pool $_pool"
			rootok=0
		fi
	fi

	_mountpoint=`zfs get -H -o value mountpoint $_bootfs`
	info "ZFS: mountpoint = $_mountpoint"
	info "ZFS: bootfs = $_bootfs"
	if [ "$_mountpoint" = "legacy" ] ; then
		mount -o rw -t zfs "$_bootfs" "$NEWROOT" && ROOT_MOUNTED=yes
	else
		mount -o rw,zfsutil -t zfs "$_bootfs" "$NEWROOT" && ROOT_MOUNTED=yes
	fi
	if [ "$?" != "0" ] ; then
		warn "ZFS: something went wrong while mounting root filesystem"
	fi
}

if [ "${ZFSROOT}" = "true" ] ; then
	mount_zfs_root
else
	info "zfs not used"
fi
