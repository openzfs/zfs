'\" t
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\"
.\" Copyright 2015 ClusterHQ Inc. All rights reserved.
.\"
.TH lzc_snaprange_space 3 "2015 JUL 8" "OpenZFS" "OpenZFS Programmer's Manual"

.SH PROLOG
This manual page is part of the OpenZFS Programmer's Manual.

.SH SYNOPSIS
#include <libzfs_core.h>

\fBint\fR \fBlzc_snaprange_space\fR(\fBconst char *\fR\fIfirstsnap\fR, \fBconst char *\fR\fIlastsnap\fR, \fBuint64_t *\fR\fIusedp\fR);

.SH NAME
lzc_snaprange_space \- Determine how much space is used by a snapshot range.

.SH DESCRIPTION
.LP
The
\fBlzc_snaprange_space\fR()
function calculates how much space in bytes the differences between
\fIfirstsnap\fR and \fIlastsnap\fR use in the pool. They must be snapshots of
the same dataset.

.SH RETURN VALUES
.sp
.LP
Upon successful completion, 0 is returned. Otherwise, an error is returned.
.SH ERRORS
.sp
.LP
The \fBlzc_snaprange_space()\fR function will fail if:
.sp
.ne 2
.na
\fB\fBEEXIST\fR\fR
.ad
.RS 13n
The pool was uninitialized and a pool with the same GUID already existed.
.sp
A dataset named \fIfsname\fR already exists.
.RE

.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 13n
The snapshot name \fIfirstsnap\fR is not syntactically correct.
.sp
The snapshot name \fIlastsnap\fR is not syntactically correct.
.RE
.sp
.ne 2
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 13n
The string \fIfirstsnap\fR exceeds 256 characters.
.sp
The string \fIlastsnap\fR exceeds 256 characters.
.RE


.sp
.ne 2
.na
\fB\fBENOENT\fR\fR
.ad
.RS 13n
Pool does not exist.
.sp
Loadng unitialized pool from cachefile failed because the pool was exported or
destroyed.
.sp
Internal error where uninitialized pool lacks a GUID in its config that was
read from the cachefile.
.sp
The snapshot \fIfirstsnap\fR does not exist.
.sp
The snapshot \fIlastsnap\fR does not exist.
.RE

.sp
.ne 2
.na
\fB\fBEPERM\fR\fR
.ad
.RS 13n
Permission denied by zone security policy.
.RE

\fB\fBEXDEV\fR\fR
.ad
.RS 13n
\fIfirstsnap\fR must be an earlier snapshot than \fIlastsnap\fR.
.sp
\fIfirstsnap\fR and \fIlastsnap\fR are not from the same dataset.
.RE

.SH BUGS
.LP
Early implementations of the API will return \fB\fBENOENT\fR\fR instead of
\fB\fBEXDEV\fR\fR. The same implementations would also segfault in
\fBlzc_snaprange_space()\fR when \fI*usedp\fR was NULL. These issues were
rectified when the man page was written. 

.SH SEE ALSO
.sp
.LP
\fBlibzfs_core.h\fR(3), \fBzfs\fR(8)
