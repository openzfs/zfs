'\" t
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\"
.\" Copyright 2015 ClusterHQ Inc. All rights reserved.
.\"
.TH lzc_receive 3 "2015 JUL 8" "OpenZFS" "OpenZFS Programmer's Manual"

.SH PROLOG
This manual page is part of the OpenZFS Programmer's Manual.
.SH SYNOPSIS
#include <libzfs_core.h>

\fBint\fR \fBlzc_receive\fR(\fBconst char *\fR\fIsnapname\fR, \fBnvlist_t
*\fR\fIprops\fR, \fBconst char *\fR\fIorigin\fR, \fBboolean_t\fR \fIforce\fR,
\fBint\fR \fIfd\fR);
.sp
\fBint\fR \fBlzc_receive_with_header\fR(\fBconst char *\fR\fIsnapname\fR,
\fBnvlist_t *\fR\fIprops\fR, \fBconst char *\fR\fIorigin\fR, \fBboolean_t\fR
\fIforce\fBR, \fBboolean_t\fR \fIresumable\fR, \fBint\fR \fIfd\fR, \fBconst
dmu_replay_record_t *\fR\fIbegin_record\fR);

.SH NAME
lzc_receive, lzc_receive_with_header \- Create a snapshot from a zfs send stream

.SH DESCRIPTION
.LP
The \fBlzc_receive\fR() function reads a zfs send stream from the file
descriptor \fIfd\fR to atomically create the snapshot \fIsnapname\fR. Any
properties specified by \fIprops\fR shall be set as received properties.

The \fBlzc_receive_with_header\fR() function behaves identically when
\fIbegin_record\fR is NULL. It assumes that the first 312-byte
dmu_replay_record_t has been read from the ststream and is avaliable from
\fIbegin_record\fR when \fIbegin_record\fR is non-NULL. In this case, the begin
record should be provided in unmodified form to avoid a double byte-swap when a
byte-swap is necessary.

If the stream is a clone, its origin snapshot must be specified by \fIorigin\fR.
The \fIforce\fR flag will cause the target filesystem to be rolled back or
destroyed if necessary to receive the send stream.

This interface does not work on deduplicated streams (those with
DMU_BACKUP_FEATURE_DEDUP) at this time. Also, O_NONBLOCK is not supported on
\fIfd\fR.

.SH RETURN VALUES
.sp
.LP
Upon successful completion, 0 is returned.
.sp
On error, an error is returned from one of the holds where an error occurred
and \fI*errlist\fR is initialized with a pointer to a nvlist with more specific
information when \fIerrlist\fR is non-NULL. The caller must call
\fBnvlist_free\fR(\fI*errlist\fR) when this occurs.

.SH ERRORS
.sp
.LP
The \fBlzc_receive()\fR function shall fail if:
.sp
.ne 2
.na
\fB\fBEAGAIN\fR\fR, \fB\fBEWOULDBLOCK\fR\fR
.ad
.RS 13n
The file descriptor was marked non-blocking and the call would block. This is
from \fBread\fR(2). This indicates a userland programming bug because \fIfd\fB
should never be set as being non-blocking.
.RE

.sp
.ne 2
.na
\fB\fBEBADE\fR\fR
.ad
.RS 13n
Checksum failure in stream.
.RE

.sp
.ne 2
.na
\fB\fBEBADF\fR\fR
.ad
.RS 13n
The file descriptor \fIfd\fR is invalid.
.RE

.sp
.ne 2
.na
\fB\fBEBUSY\fR\fR
.ad
.RS 13n
The \fIorigin\fR has a long hold (i.e. it is mounted).
.RE


.sp
.ne 2
.na
\fB\fBEEXIST\fR\fR
.ad
.RS 13n
The pool was uninitialized and a pool with the same GUID already existed.
.RE

.sp
.ne 2
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 13n
Internal issue occurred when copying command data from userland to kernel. See
Illumos ddi_copyin(9F).
.RE

.sp
.ne 2
.na
\fB\fBEIO\fR\fR
.ad
.RS 13n
Reading the dmu replay record header from the file descriptor failed.
.sp
A low level error occurred. This is from \fBread\fR(2).
.RE

.sp
.ne 2
.na
\fB\fBEINTR\fR\fR
.ad
.RS 13n
The call was interrupted by a userspace signal.
.RE

.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 13n
The string \fIsnapname\fR is not a valid bookmark or snapshot name.
.sp
The \fIorigin\fR is specified, but \fIorigin\fR and \fIsnapname\fR are not both snapshots.
.sp

.RE

.sp
.ne 2
.na
\fB\fBEISDIR\fR\fR
.ad
.RS 13n
The file descriptor \fIfd\fR belongs to a directory. This is from \fBread\fR(2).
.RE

:sp
.ne 2
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 13n
The string \fIsnapname\fR exceeds 256 characters.
.RE

.sp
.ne 2
.na
\fB\fBENOENT\fR\fR
.ad
.RS 13n
Pool does not exist.
.sp
Loading unitialized pool from cachefile failed because the pool was exported or destroyed.
.sp
Internal error where uninitialized pool lacks a GUID in its config that was read from the cachefile.
.sp
The snapshot or bookmark named \fIsnapname\fR does not exist.
.RE

.sp
.ne 2
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 13n
Failed to allocate memory necessary to send \fIparams\fR to the kernel.
.RE

.sp
.ne 2
.na
\fB\fBENOSPC\fR\fR
.ad
.RS 13n
The pool is out of space.
.sp
The inherited quotas and reservations do not allow for more space to be used.
.RE

.sp
.ne 2
.na
\fB\fBEPERM\fR\fR
.ad
.RS 13n
Permission denied by zone security policy.
.RE

.sp
.ne 2
.na
\fB\fBETXTBSY\fR\fR
.ad
.RS 13n
The force flag has not been set, but the dataset belonging to \fRsnapname\fI has been modified.
.RE


.SH BUGS
File descriptors with O_NONBLOCK do not fail immediately.

.SH SEE ALSO
.sp
.LP
\fBlibzfs_core.h\fR(3), \fBlzc_hold\fR(3), \fBlzc_receive\fR(3), \fBwrite\fR(2),
\fBzfs\fR(8)
