'\" t
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\"
.\" Copyright 2015 ClusterHQ Inc. All rights reserved.
.\"
.TH lzc_destroy_bookmarks 3 "2015 JUL 7" "OpenZFS" "OpenZFS Programmer's Manual"

.SH PROLOG
This manual page is part of the OpenZFS Programmer's Manual.

.SH SYNOPSIS
#include <libzfs_core.h>

\fBint\fR \fBlzc_destroy_bookmarks\fR(\fBnvlist_t *\fR\fIbmarks\fR, \fBnvlist_t **\fR\fIerrlist\fR);
.sp
\fBint\fR \fBlzc_destroy_bookmarks_ext\fR(\fBnvlist_t *\fR\fIbmarks\fR, \fBnvlist_t *\fR\fIopts\fR, \fBnvlist_t **\fR\fIerrlist\fR);

.SH NAME
lzc_destroy_bookmarks, lzc_destroy_bookmarks_ext \- Destroys bookmarks

.SH DESCRIPTION
.LP
The \fBlzc_destroy_bookmarks\fR() function shall atomically destroy bookmarks
specified within a pool. The pool is determined implicitly from the list of
bookmarks. If \fIerrlist\fR is specified and destruction of a bookmark fails
(e.g. specified name too long), it will be allocated and updated to contain a
list of bookmarks where the operation failed. The keys of the list will be the
full bookmark names while the values will be int32 error codes. The
\fBlzc_destroy_bookmarks_ext\fR() function behaves identically unless the
additional \fIopts\fR nvlist pointer is non-NULL. The \fIopts\fR nvlist permits
changes to the command behavior. At present, it permits the command invocation
to be passed by a string named "log_history".
.sp
Bookmarks that do not exist will be silently ignored.

.SH RETURN VALUES
.sp
.LP
Upon successful completion, 0 is returned.
.sp
On error, an error is returned from one of the bookmarks where an error
occurred and \fIerrlist\fR is populated with more specific information if a
pointer is provided. \fIerrlist\fR shall contain keys with the snapshot names
and int32 values of the error codes. The caller must call \fBnvlist_free\fR()
on \fIerrlist\fR if this occurs.
.SH ERRORS
.sp
.LP
The \fBlzc_destroy_bookmarks()\fR function will fail if:
.sp
.ne 2
.na
\fB\fBEEXIST\fR\fR
.ad
.RS 13n
The pool was uninitialized and a pool with the same GUID already existed.
.RE

.sp
.ne 2
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 13n
Invalid boomark name specified in \fIbmarks\fR.
.RE

.sp
.ne 2
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 13n
Bookmark name specified in \fIbmarks\fR is too long.
.RE

.sp
.ne 2
.na
\fB\fBENOENT\fR\fR
.ad
.RS 13n
Pool does not exist.
.sp
Loading unitialized pool from cachefile failed because the pool was exported or destroyed.
.sp
Internal error where uninitialized pool lacks a GUID in its config that was read from the cachefile.
.RE

.sp
.ne 2
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 13n
Failed to allocate memory necessary to send \fIbmarks\fR to the kernel.
.RE

.sp
.ne 2
.na
\fB\fBEPERM\fR\fR
.ad
.RS 13n
Permission denied by zone security policy.
.RE

.sp
.ne 2
.na
\fB\fBEXDEV\fR\fR
.ad
.RS 13n
Bookmarks from different pools were specified.
.RE

.SH SEE ALSO
.sp
.LP
\fBlibzfs_core.h\fR(3), \fBzfs\fR(8)
