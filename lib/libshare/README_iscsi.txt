This is iSCSI support for the IET, SCST and STGT iSCSI target implementations.

     Implementation	URL					Package name(s)
     IET		http://iscsitarget.sourceforge.net	iscsitarget + iscsitarget-dkms
     SCST		http://scst.sourceforge.net		iscsi-scst + scst-dkms + scst-fileio-tgt + scstadmin
     STGT		http://stgt.berlios.de			tgt
     LIO		http://linux-iscsi.org			lio-utils + targetcli

It will call ietmadm (for IET), tgtadm (for STGT) or modify files in
/sys/kernel/scst_tgt (for SCST) or /sys/kernel/config/target (for LIO) to both
add or remove a iSCSI target from the call to 'zfs share':

  zfs create -s -V10G mypool/test
  zfs set shareiscsi=on mypool/test

There is no need to issue 'zfs share tank/test', because ZFS will
automatically issue the corresponding share command(s) when setting
(or modifying) the shareiscsi property.


The driver will execute the following commands to setup a target (example!):

* For IET:

  /usr/sbin/ietadm --op new --tid TID --params Name=iqn.2010-09.org.zfsonlinux:mypool.test
  /usr/sbin/ietadm --op new --tid TID --lun LUN --params Path=/dev/zvol/mypool/test,Type=fileio

* For STGT:

  tgtadm --lld iscsi --op new  --mode target      --tid TID -T iqn.2010-09.org.zfsonlinux:share.test
  tgtadm --lld iscsi --op new  --mode logicalunit --tid TID --lun 1 -b /dev/zvol/mypool/test
  tgtadm --lld iscsi --op bind --mode target      --tid TID --initiator-address ALL

* For SCST:

  SYSFS_SCST="/sys/kernel/scst_tgt"

  echo "add_target iqn.2010-09.org.zfsonlinux:mypool.test" > $SYSFS_SCST/targets/iscsi/mgmt
  echo "add_device DEVICE filename=/dev/zvol/mypool/test; blocksize=BLOCKSIZE" > $SYSFS_SCST/handlers/vdisk_blockio/mgmt
  echo "add DEVICE LUN" > $SYSFS_SCST/targets/iscsi/iqn.2010-09.org.zfsonlinux:mypool.test/luns/mgmt
  echo 1 > $SYSFS_SCST/targets/iscsi/iqn.2010-09.org.zfsonlinux:mypool.test/enabled

* For LIO

  SYSFS_LIO="/sys/kernel/config/target"

  # TEST DATA:
  ip=$(ifconfig | grep 'inet addr:' | grep -v '127.0.0.1' | head -n1 | sed "s@.*addr:\(.*\)  Bcast.*@\1@")
  md5=$(date | md5sum | cut -f1 -d' ')

  # SETUP Device
  mkdir -p $SYSFS_LIO/core/iblock_TID/mypool.test
  echo -n "/dev/zvol/mypool/test" > $SYSFS_LIO/core/iblock_TID/mypool.test/udev_path
  echo -n "udev_path=/dev/zvol/mypool/test" > $SYSFS_LIO/core/iblock_TID/mypool.test/control
  echo -n $md5 > $SYSFS_LIO/core/iblock_TID/mypool.test/wwn/vpd_unit_serial
  echo 1 > $SYSFS_LIO/core/iblock_TID/mypool.test/enable
  echo 4096 > $SYSFS_LIO/core/iblock_TID/mypool.test/attrib/block_size
  echo 0 > $SYSFS_LIO/core/iblock_TID/mypool.test/attrib/emulate_tas
  echo 0 > $SYSFS_LIO/core/iblock_TID/mypool.test/attrib/emulate_ua_intlck_ctrl

  # SETUP IQN/Target
  mkdir -p $SYSFS_LIO/iscsi/iqn.2010-09.org.zfsonlinux:mypool.test/tpgt_TID/np/$ip:3260
  mkdir -p $SYSFS_LIO/iscsi/iqn.2010-09.org.zfsonlinux:mypool.test/tpgt_TID/lun/lun_LUN
  ln -s $SYSFS_LIO/core/iblock_TID/mypool.test \
     $SYSFS_LIO/iscsi/iqn.2010-09.org.zfsonlinux:mypool.test/tpgt_TID/lun/lun_LUN/$md5
  echo -n 0 > $SYSFS_LIO/iscsi/discovery_auth/enforce_discovery_auth
  echo 0 > $SYSFS_LIO/iscsi/iqn.2010-09.org.zfsonlinux:mypool.test/tpgt_TID/attrib/authentication
  echo 1 > $SYSFS_LIO/iscsi/iqn.2010-09.org.zfsonlinux:mypool.test/tpgt_TID/enable

Here the value DEVICE is generated by iscsi.c:iscsi_generate_scst_device_name()
and is a randomized value, based on the exact time of day when
called. This because SCST have a limit of 16 characters for the device
name, and the chances of have duplicates is large. The BLOCKSIZE that
is used depends on what blocksize the ZVOL was created with.

The LUN value is by default 0 (1 for STGT becase LUN0 is the controller),
but can be overridden using the 'lun' option to the 'shareiscsi' property.

It (the driver) will automatically calculate the TID and IQN and use
only the ZVOL (in this case 'share/test') in the command lines.

If autogenerating the IQN is not wanted (because each reboot or unshare/share,
if it's done in another month, will generate a new IQN), a hardcoded default
can be set in /etc/iscsi_target_id like so:

  echo iqn.2010-09.org.zfsonlinux > /etc/iscsi_target_id

Then all targets will start with this value, only adding a colon
and the ZVOL/dataset name (slashes replaced with dots):

  iqn.2010-09.org.zfsonlinux:mypool.test


In addition to executing ietadm, tgtadm or modifying files below
/sys/kernel/scst_tgt or /sys/kernel/config/target, zfs will execute
the following script (if it exist and is executable)
'/sbin/zfs_share_iscsi.sh', like so:

  /sbin/zfs_share_iscsi TID

This is so that one can create custom commands to be done on the
share.

The only parameter to this script/executable is the TID and the
driver will 'execute and forget'. Meaning, it will not care about
exit code nor any output it gives.

Example scripts have been provided, on for each of the iSCSI
implementation supported:

    zfs_share_iscsi.iet
    zfs_share_iscsi.lio
    zfs_share_iscsi.scst
    zfs_share_iscsi.stgt

Simply copy the one for your iSCSI implementation to /sbin/zfs_share/iscsi
and then modify it to your requirenments.

PS. The domainname needs to be set (in /proc/sys/kernel/domainname
    using either 'sysctl', 'echo' or the command 'domainname') for
    the driver to be able to work out the iqn correctly.

    NOTE: This is only required if the IQN haven't been set in the
    	  /etc/iscsi_target_id file!
