%define module  @PACKAGE@
%define spl	@SPL@
%define ksrc	@LINUX@
%define kver	@LINUX_VERSION@

%bcond_with     debug
%bcond_with     debug_dmu_tx

%if %{with debug}
    %define dbg_name -debug
%endif

Name:           %{module}-kmod%{?dbg_name}

Version:        @VERSION@
Release:        @RELEASE@%{?dist}
Summary:        Kernel module(s)

Group:          System Environment/Kernel
License:        @ZFS_META_LICENSE@
URL:            http://zfsonlinux.org/
Source0:        %{module}-%{version}.tar.gz
Source10:       kmodtool
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)

# The developments headers will conflict with the dkms packages.
Conflicts:      %{module}-dkms

Provides:       %{module}-kmod%{?dbg_name}
%if %{with debug}
Conflicts:      %{module}-kmod
%endif

# Source packages minimally require a kernel-devel dependency.
%{?rhel:BuildRequires: kernel-devel}
%{?fedora:BuildRequires: kernel-devel}
%{?suse_version:BuildRequires: kernel-source}

%if 0%{?rhel}%{?fedora}%{?suse_version}
BuildRequires:             spl-devel-kmod = %{version}
%global KmodsBuildRequires spl-devel-kmod
%global KmodsRequires      kmod-spl
%endif

# Binary packages build against all installed kernels by default.
%if !%{defined kernels} && !%{defined build_src_rpm}
    %if 0%{?rhel}%{?fedora}%{?suse_version}
        %define kernels %(ls -1 /usr/src/kernels)
    %else
        %define kernels %(ls -1 /lib/modules)
    %endif
%endif

%if 0%{?fedora} >= 17
%define prefix  /usr
%endif

# Kmodtool does its magic here.  A patched version of kmodtool is shipped
# with the source rpm until kmod development packages are supported upstream.
# https://bugzilla.rpmfusion.org/show_bug.cgi?id=2714
%{expand:%(bash %{SOURCE10} --target %{_target_cpu} --kmodname %{module}%{?dbg_name} %{!?dbg_name:--devel} %{?prefix:--prefix "%{?prefix}"} %{?kernels:--for-kernels "%{?kernels}"} %{?ksrc:--linuxdir "%{?ksrc}"} 2>/dev/null) }


%description
This package contains the ZFS kernel modules.

%prep
# Error out if there was something wrong with kmodtool.
%{?kmodtool_check}

# Print kmodtool output for debugging purposes:
bash %{SOURCE10}  --target %{_target_cpu}  --repo %{repo} --kmodname %{module}%{?dbg_name} %{!?dbg_name:--devel} %{?prefix:--prefix "%{?prefix}"} %{?kernels:--for-kernels "%{?kernels}"} %{?ksrc:--linuxdir "%{?ksrc}"} 2>/dev/null

%if %{with debug}
    %define debug --enable-debug
%else
    %define debug --disable-debug
%endif

%if %{with debug_dmu_tx}
    %define debug_dmu_tx --enable-debug-dmu-tx
%else
    %define debug_dmu_tx --disable-debug-dmu-tx
%endif

# Leverage VPATH from configure to avoid making multiple copies.
%define _configure ../%{module}-%{version}/configure

%setup -q -c -T -a 0 -n %{module}-%{version}

for kernel_version in %{?kernel_versions}; do
    %{__mkdir} _kmod_build_${kernel_version%%___*}
done

%build
for kernel_version in %{?kernel_versions}; do
    cd _kmod_build_${kernel_version%%___*}
    %_configure \
        --with-config=kernel \
%if 0%{?rhel}%{?fedora}
        --with-linux="${kernel_version##*___}" \
        --with-linux-obj="${kernel_version##*___}" \
%else
%if %{defined ksrc}
        --with-linux=%{ksrc} \
        --with-linux-obj=%{ksrc} \
%else
        --with-linux=\
        %(if [ -e /lib/modules/${kernel_version%%___*}/source ]; then \
            echo "/lib/modules/${kernel_version%%___*}/source" \
        else \
            echo "/lib/modules/${kernel_version%%___*}/build" \
        fi) \
        --with-linux-obj="/lib/modules/${kernel_version%%___*}/build" \
%endif
%endif
%if %{defined spl}
	--with-spl=%{spl} \
	--with-spl-obj=%{spl} \
%else
        --with-spl="/usr/src/spl-%{version}" \
        --with-spl-obj="/usr/src/spl-%{version}/${kernel_version%%___*}" \
%endif
        %{debug} \
        %{debug_dmu_tx}
    make %{?_smp_mflags}
    cd ..
done


%install
rm -rf ${RPM_BUILD_ROOT}

# Relies on the kernel 'modules_install' make target.
for kernel_version in %{?kernel_versions}; do
    cd _kmod_build_${kernel_version%%___*}
    make install \
        DESTDIR=${RPM_BUILD_ROOT} \
        %{?prefix:INSTALL_MOD_PATH=%{?prefix}} \
        INSTALL_MOD_DIR=%{kmodinstdir_postfix}
    cd ..
done
chmod u+x ${RPM_BUILD_ROOT}%{kmodinstdir_prefix}/*/extra/*/*/*
%{?akmod_install}

%if %{with debug}
rm -Rf ${RPM_BUILD_ROOT}/usr
mkdir -p ${RPM_BUILD_ROOT}/usr/src/%{module}-debug-%{version}/%{kver}
%endif

%files
%{kmodinstdir_prefix}/*/extra/*/*/*.ko

%clean
rm -rf $RPM_BUILD_ROOT

%changelog
* Fri Mar 22 2013 Brian Behlendorf <behlendorf1@llnl.gov> - 0.6.1-1
- First official stable release.
