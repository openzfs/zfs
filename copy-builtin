#!/bin/sh

set -ef

usage()
{
	echo "usage: $0 <kernel source tree>" >&2
	exit 1
}

[ "$#" -eq 1 ] || usage
KERNEL_DIR="$1"

if ! [ -e 'zfs_config.h' ]
then
	echo "$0: you did not run configure, or you're not in the ZFS source directory."
	echo "$0: run configure with --with-linux=$KERNEL_DIR and --enable-linux-builtin."

	exit 1
fi >&2

make clean ||:
make gitrev

rm -rf "$KERNEL_DIR/include/zfs" "$KERNEL_DIR/fs/zfs"
cp -R include "$KERNEL_DIR/include/zfs"
cp -R module "$KERNEL_DIR/fs/zfs"
cp zfs_config.h "$KERNEL_DIR/include/zfs/"

cat > "$KERNEL_DIR/fs/zfs/Kconfig" <<EOF
config ZFS
	tristate "ZFS filesystem support"
	depends on EFI_PARTITION
	select ZLIB_INFLATE
	select ZLIB_DEFLATE
	help
	  This is the ZFS filesystem from the OpenZFS project.

	  See https://github.com/openzfs/zfs

	  To compile this file system support as a module, choose M here.

	  If unsure, say N.
EOF

add_after()
{
	FILE="$1"
	MARKER="$2"
	NEW="$3"

	while IFS='' read -r LINE
	do
		printf "%s\n" "$LINE"

		if [ -n "$MARKER" ] && [ "$LINE" = "$MARKER" ]
		then
			printf "%s\n" "$NEW"
			MARKER=''
			if IFS='' read -r LINE
			then
				[ "$LINE" != "$NEW" ] && printf "%s\n" "$LINE"
			fi
		fi
	done < "$FILE" > "$FILE.new"

	mv "$FILE.new" "$FILE"
}

add_after "$KERNEL_DIR/fs/Kconfig" 'if BLOCK' 'source "fs/zfs/Kconfig"'
add_after "$KERNEL_DIR/fs/Makefile" 'endif' 'obj-$(CONFIG_ZFS) += zfs/'

echo "$0: done. now you can build the kernel with ZFS support." >&2
echo "$0: make sure you enable ZFS support (CONFIG_ZFS) before building." >&2
