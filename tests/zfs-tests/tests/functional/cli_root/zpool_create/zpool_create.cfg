#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

#
# Copyright (c) 2012, 2015 by Delphix. All rights reserved.
#

. $STF_SUITE/include/libtest.shlib

export DISK_ARRAY_NUM=0
export DISK_ARRAY_LIMIT=4
export DISKSARRAY=""

function set_disks
{
        typeset -a disk_array=($(find_disks $DISKS))

	if (( ${#disk_array[*]} <= 1 )); then
		export DISK=${DISKS%% *}
		export DISK_ARRAY_NUM=1
	else
		export DISK=""
		typeset -i i=0
		while (( i < ${#disk_array[*]} )); do
			export DISK${i}="${disk_array[$i]}"
			DISKSARRAY="$DISKSARRAY ${disk_array[$i]}"
			(( i = i + 1 ))
			(( i>$DISK_ARRAY_LIMIT )) && break
		done
		export DISK_ARRAY_NUM=$i
		export DISKSARRAY
	fi
}

set_disks

export FILESIZE="$MINVDEVSIZE"
export FILESIZE1="$(($MINVDEVSIZE * 2))"
export SIZE="$((MINVDEVSIZE / (1024 * 1024)))"m
export SIZE1="$(($MINVDEVSIZE * 2 / (1024 * 1024)))m"

if is_linux; then
	set_device_dir
	set_slice_prefix
	export SLICE0=1
	export SLICE1=2
	export SLICE2=3
	export SLICE3=4
	export SLICE4=5
	export SLICE5=6
	export SLICE6=7
	export SLICE7=8
	disk1=${DISKS%% *}
	if is_mpath_device $disk1; then
		delete_partitions
	fi
else
	export SLICE_PREFIX="s"
	export SLICE0=0
	export SLICE1=1
	export SLICE2=2
	export SLICE3=3
	export SLICE4=4
	export SLICE5=5
	export SLICE6=6
	export SLICE7=7
fi

export FILEDISK=filedisk_create
export FILEDISK0=filedisk0_create
export FILEDISK1=filedisk1_create
export FILEDISK2=filedisk2_create
export FILEDISK3=filedisk3_create

export BYND_MAX_NAME="byondmaxnamelength\
012345678901234567890123456789\
012345678901234567890123456789\
012345678901234567890123456789\
012345678901234567890123456789\
012345678901234567890123456789\
012345678901234567890123456789\
012345678901234567890123456789\
012345678901234567890123456789"

export TOOSMALL="toosmall"

export TESTPOOL4=testpool4.create
export TESTPOOL5=testpool5.create
export TESTPOOL6=testpool6.create

export CPATH="$TEST_BASE_DIR/cachefile.create"
